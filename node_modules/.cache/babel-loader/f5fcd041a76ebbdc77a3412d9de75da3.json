{"ast":null,"code":"var _jsxFileName = \"/Users/annacarey/Development/code/painterly/painterly-frontend/src/containers/Canvas.js\";\nimport React from 'react';\nimport Board from '../components/Board';\nimport Toolbar from '../components/Toolbar';\n\nclass Canvas extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentGrid: [[\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"], [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"], [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"], [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"], [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"]],\n      currentColor: null\n    };\n\n    this.paintCell = (xCoordinate, yCoordinate) => {\n      console.log(this.state.currentGrid[xCoordinate][yCoordinate]);\n      this.setState(prevState => {//    currentGrid: \n      }); // this.state.currentGrid[xCoordinate][yCoordinate] = this.state.currentColor\n\n      console.log(\"paint cell\", xCoordinate, yCoordinate);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Board, {\n      currentGrid: this.state.currentGrid,\n      paintCell: this.paintCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Canvas; // props for board: \n// currentColor={this.state.currentColor} currentGrid={this.state.currentGrid}","map":{"version":3,"sources":["/Users/annacarey/Development/code/painterly/painterly-frontend/src/containers/Canvas.js"],"names":["React","Board","Toolbar","Canvas","Component","state","currentGrid","currentColor","paintCell","xCoordinate","yCoordinate","console","log","setState","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAGA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACJC,MAAAA,WAAW,EAAE,CACZ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CADY,EAEZ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAFY,EAGZ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAHY,EAIZ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAJY,EAKZ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CALY,CADT;AAQJC,MAAAA,YAAY,EAAE;AARV,KAF0B;;AAAA,SAalCC,SAbkC,GAatB,CAACC,WAAD,EAAcC,WAAd,KAA8B;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,WAAX,CAAuBG,WAAvB,EAAoCC,WAApC,CAAZ;AACA,WAAKG,QAAL,CAAeC,SAAD,IAAe,CAC5B;AACA,OAFD,EAFsC,CAKzC;;AACIH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,WAA1B,EAAuCC,WAAvC;AACJ,KApBiC;AAAA;;AAsBjCK,EAAAA,MAAM,GAAG;AACL,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWC,WAA/B;AAA4C,MAAA,SAAS,EAAI,KAAKE,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADA;AAMH;;AA7BgC;;AAgCrC,eAAeL,MAAf,C,CAEA;AACA","sourcesContent":["import React from 'react';\nimport Board from '../components/Board'\nimport Toolbar from '../components/Toolbar'\n\n\nclass Canvas extends React.Component {\n  \n   state = {\n       currentGrid: [\n        [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"],\n        [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"],\n        [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"],\n        [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"],\n        [\"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\", \"#FFFFFF\"]\n],\n       currentColor: null\n   }\n\n   paintCell = (xCoordinate, yCoordinate) => {\n       console.log(this.state.currentGrid[xCoordinate][yCoordinate])\n       this.setState((prevState) => {\n        //    currentGrid: \n       })\n    // this.state.currentGrid[xCoordinate][yCoordinate] = this.state.currentColor\n        console.log(\"paint cell\", xCoordinate, yCoordinate)\n   }\n  \n    render() {\n        return (\n        <div>\n           <Board currentGrid={this.state.currentGrid} paintCell = {this.paintCell}/>\n           <Toolbar />\n        </div>\n        )\n    }\n}\n\nexport default Canvas;\n\n// props for board: \n// currentColor={this.state.currentColor} currentGrid={this.state.currentGrid}"]},"metadata":{},"sourceType":"module"}